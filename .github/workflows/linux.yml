name: Linux.

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/linux.yml'
      - 'snap/**'
      - 'Telegram/build/**'
      - 'Telegram/Resources/uwp/**'
      - 'Telegram/Resources/winrc/**'
      - 'Telegram/SourceFiles/platform/win/**'
      - 'Telegram/SourceFiles/platform/mac/**'
      - 'Telegram/Telegram/**'
      - 'Telegram/configure.bat'
      - 'Telegram/Telegram.plist'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/linux.yml'
      - 'snap/**'
      - 'Telegram/build/**'
      - 'Telegram/Resources/uwp/**'
      - 'Telegram/Resources/winrc/**'
      - 'Telegram/SourceFiles/platform/win/**'
      - 'Telegram/SourceFiles/platform/mac/**'
      - 'Telegram/Telegram/**'
      - 'Telegram/configure.bat'
      - 'Telegram/Telegram.plist'

jobs:

  linux:
    name: Rocky Linux 8
    runs-on: ubuntu-latest

    env:
      UPLOAD_ARTIFACT: "true"

    steps:
      - name: Clone.
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Free up some disk space.
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
        
      - name: Docker image build.
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          cd Telegram/build/docker/centos_env
          rm poetry.lock
          poetry install
          DEBUG= LTO= poetry run gen_dockerfile | DOCKER_BUILDKIT=1 docker build -t tdesktop:centos_env -
          
      - name: Telegram Desktop build.
        run: |
          cd ../../../..
          echo "ARTIFACT_NAME=Telegram" >> $GITHUB_ENV
          docker run --rm \
          -v "$PWD:/usr/src/tdesktop" \
          -e CONFIG=Release \
          tdesktop:centos_env \
          /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
          -D TDESKTOP_API_ID=2040 \
          -D TDESKTOP_API_HASH=b18441a1ff607e10a989891a5462e627

      - uses: actions/upload-artifact@v4
        if: env.UPLOAD_ARTIFACT == 'true'
        name: Upload artifact.
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.REPO_NAME }}/out/Release
